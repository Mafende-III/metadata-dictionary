# Nginx Configuration for DHIS2 Metadata Dictionary
# Domain: dictionary.mafendeblaise.info
# Server IP: 209.250.236.158

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;

# Upstream configuration for Next.js app
upstream dictionary_app {
    server 127.0.0.1:3000;
    keepalive 64;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name dictionary.mafendeblaise.info www.dictionary.mafendeblaise.info;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server block
server {
    listen 443 ssl http2;
    server_name dictionary.mafendeblaise.info;
    
    # SSL Configuration
    ssl_certificate /etc/ssl/certs/dictionary.mafendeblaise.info.crt;
    ssl_certificate_key /etc/ssl/private/dictionary.mafendeblaise.info.key;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-src 'none';" always;
    
    # Basic Settings
    root /var/www/metadict;
    index index.html index.htm;
    
    # Logging
    access_log /var/log/nginx/dictionary_access.log;
    error_log /var/log/nginx/dictionary_error.log;
    
    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Client settings
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Static assets with long cache
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        
        # Try to serve static files directly
        try_files $uri @proxy;
    }
    
    # Next.js static files
    location /_next/static/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri @proxy;
    }
    
    # API routes with rate limiting
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        limit_req_status 429;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "https://dictionary.mafendeblaise.info" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # Handle preflight requests
        if ($request_method = OPTIONS) {
            return 204;
        }
        
        proxy_pass http://dictionary_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Main application with general rate limiting
    location / {
        limit_req zone=general burst=50 nodelay;
        limit_req_status 429;
        
        # Try to serve static files first, then proxy to Next.js
        try_files $uri $uri/ @proxy;
    }
    
    # Proxy to Next.js application
    location @proxy {
        proxy_pass http://dictionary_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }
    
    # Security: Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~* \.(env|log|md|txt|yml|yaml|json)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block common exploit attempts
    location ~* (wp-admin|wp-login|phpMyAdmin|phpmyadmin) {
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }
}

# Optional: www redirect
server {
    listen 443 ssl http2;
    server_name www.dictionary.mafendeblaise.info;
    
    # SSL Configuration (same as main server)
    ssl_certificate /etc/ssl/certs/dictionary.mafendeblaise.info.crt;
    ssl_certificate_key /etc/ssl/private/dictionary.mafendeblaise.info.key;
    
    # Redirect www to non-www
    return 301 https://dictionary.mafendeblaise.info$request_uri;
}

# Configuration Notes:
# 1. Place this file in /etc/nginx/sites-available/dictionary.mafendeblaise.info
# 2. Create symbolic link: sudo ln -s /etc/nginx/sites-available/dictionary.mafendeblaise.info /etc/nginx/sites-enabled/
# 3. Test configuration: sudo nginx -t
# 4. Reload Nginx: sudo systemctl reload nginx
# 5. Ensure SSL certificates are in place before enabling HTTPS
# 6. Update firewall rules to allow ports 80 and 443
# 7. Consider using Let's Encrypt for free SSL certificates
# 8. Monitor logs in /var/log/nginx/ for troubleshooting